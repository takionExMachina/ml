import keras
from keras.models import Sequential, Input, Model
from keras.layers import Dense, Dropout, Flatten
from keras.layers import Conv2D, MaxPooling2D
from keras.layers.normalization import BatchNormalization
from keras.layers.advanced_activations import LeakyReLU
from keras.losses import categorical_crossentropy
from keras.optimizers import Adam

train_X = train_X.reshape(-1, 32, 32, 1)
test_X = test_X.reshape(-1, 32, 32, 1)

batch_size = 64
epochs = 20
num_classes = 25

malware_model = Sequential()
malware_model.add(Conv2D(32, kernel_size=(3,3), activation='linear',
    input_shape=(32,32,1), padding='same'))
malware_model.add(LeakyReLU(alpha=0.1))
malware_model.add(MaxPooling2D(pool_size=(2,2), padding='same'))
malware_model.add(Conv2D(64, (3,3), activation='linear', padding='same'))
malware_model.add(LeakyReLU(alpha=0.1))
malware_model.add(Dense(1024, activation='linear'))
malware_model.add(LeakyReLU(alpha=0.1))
malware_model.add(Dropout(0.4))
malware_model.add(Dense(num_classes, activation='softmax'))
malware_model.compile(loss=categorical_crossentropy,optimizers=Adam(),
        metrics=['accuracy'])

malware_model.fit(train_X, train_label, batch_size=batch_size,
        epochs=epochs, verbose=1, validation_data=(valid_X, valid_label))

test_eval = malware_model.evaluate(test_X, test_Y, verbose=0)
print("Accuracy of the test: %f" %(test_eval*100))

